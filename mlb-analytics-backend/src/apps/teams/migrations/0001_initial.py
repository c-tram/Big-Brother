# Generated by Django 4.2 on 2025-07-03 21:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('name_short', models.CharField(max_length=50)),
                ('abbreviation', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'divisions',
                'ordering': ['league__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=10)),
                ('name_short', models.CharField(max_length=50)),
                ('season_date_info', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'leagues',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('team_name', models.CharField(max_length=100)),
                ('location_name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=5)),
                ('team_code', models.CharField(max_length=5)),
                ('file_code', models.CharField(max_length=5)),
                ('club_name', models.CharField(blank=True, max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=50)),
                ('franchise_name', models.CharField(blank=True, max_length=100)),
                ('first_year_of_play', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='teams.division')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='teams.league')),
            ],
            options={
                'db_table': 'teams',
                'ordering': ['division__league__name', 'division__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TeamSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('runs_scored', models.IntegerField(default=0)),
                ('runs_allowed', models.IntegerField(default=0)),
                ('run_differential', models.IntegerField(default=0)),
                ('expected_wins', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('expected_losses', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('streak_type', models.CharField(blank=True, choices=[('W', 'Win'), ('L', 'Loss')], max_length=1)),
                ('streak_number', models.IntegerField(default=0)),
                ('division_rank', models.IntegerField(blank=True, null=True)),
                ('league_rank', models.IntegerField(blank=True, null=True)),
                ('wild_card_rank', models.IntegerField(blank=True, null=True)),
                ('games_back', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('wild_card_games_back', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('elimination_number', models.IntegerField(blank=True, null=True)),
                ('magic_number', models.IntegerField(blank=True, null=True)),
                ('win_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='teams.team')),
            ],
            options={
                'db_table': 'team_seasons',
                'ordering': ['-season', 'team__division__league__name', 'team__division__name', 'team__name'],
                'unique_together': {('team', 'season')},
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlb_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(default='USA', max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('elevation', models.IntegerField(blank=True, help_text='Elevation in feet', null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('surface', models.CharField(blank=True, max_length=50)),
                ('roof_type', models.CharField(blank=True, max_length=50)),
                ('left_line', models.IntegerField(blank=True, help_text='Left field foul line distance', null=True)),
                ('left_center', models.IntegerField(blank=True, null=True)),
                ('center', models.IntegerField(blank=True, help_text='Center field distance', null=True)),
                ('right_center', models.IntegerField(blank=True, null=True)),
                ('right_line', models.IntegerField(blank=True, help_text='Right field foul line distance', null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'venues',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TeamStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batting_average', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('on_base_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('slugging_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('ops', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('hits', models.IntegerField(blank=True, null=True)),
                ('doubles', models.IntegerField(blank=True, null=True)),
                ('triples', models.IntegerField(blank=True, null=True)),
                ('home_runs', models.IntegerField(blank=True, null=True)),
                ('runs_batted_in', models.IntegerField(blank=True, null=True)),
                ('walks', models.IntegerField(blank=True, null=True)),
                ('strikeouts', models.IntegerField(blank=True, null=True)),
                ('stolen_bases', models.IntegerField(blank=True, null=True)),
                ('caught_stealing', models.IntegerField(blank=True, null=True)),
                ('earned_run_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('whip', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('innings_pitched', models.DecimalField(blank=True, decimal_places=1, max_digits=6, null=True)),
                ('hits_allowed', models.IntegerField(blank=True, null=True)),
                ('walks_allowed', models.IntegerField(blank=True, null=True)),
                ('strikeouts_pitched', models.IntegerField(blank=True, null=True)),
                ('home_runs_allowed', models.IntegerField(blank=True, null=True)),
                ('saves', models.IntegerField(blank=True, null=True)),
                ('blown_saves', models.IntegerField(blank=True, null=True)),
                ('save_opportunities', models.IntegerField(blank=True, null=True)),
                ('fielding_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('errors', models.IntegerField(blank=True, null=True)),
                ('double_plays', models.IntegerField(blank=True, null=True)),
                ('team_season', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='teams.teamseason')),
            ],
            options={
                'db_table': 'team_stats',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams', to='teams.venue'),
        ),
        migrations.AddField(
            model_name='division',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='teams.league'),
        ),
    ]
