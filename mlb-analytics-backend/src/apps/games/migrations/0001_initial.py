# Generated by Django 4.2 on 2025-07-03 21:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teams', '0001_initial'),
        ('players', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mlb_game_pk', models.IntegerField(unique=True)),
                ('game_guid', models.CharField(max_length=100, unique=True)),
                ('game_date', models.DateField()),
                ('game_datetime', models.DateTimeField()),
                ('season', models.IntegerField()),
                ('season_type', models.CharField(default='Regular Season', max_length=20)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('pre_game', 'Pre-Game'), ('warmup', 'Warmup'), ('in_progress', 'In Progress'), ('final', 'Final'), ('completed_early', 'Completed Early'), ('suspended', 'Suspended'), ('postponed', 'Postponed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('detailed_state', models.CharField(blank=True, max_length=50)),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('current_inning', models.IntegerField(blank=True, null=True)),
                ('inning_state', models.CharField(blank=True, max_length=10)),
                ('game_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('weather_condition', models.CharField(blank=True, max_length=100)),
                ('weather_temp', models.IntegerField(blank=True, null=True)),
                ('wind_speed', models.CharField(blank=True, max_length=20)),
                ('wind_direction', models.CharField(blank=True, max_length=20)),
                ('attendance', models.IntegerField(blank=True, null=True)),
                ('home_plate_umpire', models.CharField(blank=True, max_length=100)),
                ('first_base_umpire', models.CharField(blank=True, max_length=100)),
                ('second_base_umpire', models.CharField(blank=True, max_length=100)),
                ('third_base_umpire', models.CharField(blank=True, max_length=100)),
                ('day_night', models.CharField(blank=True, max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='teams.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='teams.team')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='teams.venue')),
            ],
            options={
                'db_table': 'games',
                'ordering': ['-game_date', '-game_datetime'],
            },
        ),
        migrations.CreateModel(
            name='GameSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_id', models.CharField(max_length=50, unique=True)),
                ('series_description', models.CharField(blank=True, max_length=200)),
                ('series_game_number', models.IntegerField(blank=True, null=True)),
                ('series_games_total', models.IntegerField(blank=True, null=True)),
                ('series_start_date', models.DateField()),
                ('series_end_date', models.DateField()),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_series', to='teams.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_series', to='teams.team')),
            ],
            options={
                'db_table': 'game_series',
                'ordering': ['series_start_date'],
            },
        ),
        migrations.CreateModel(
            name='GameLineScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_line_score', models.JSONField(default=list)),
                ('away_line_score', models.JSONField(default=list)),
                ('home_runs', models.IntegerField(default=0)),
                ('away_runs', models.IntegerField(default=0)),
                ('home_hits', models.IntegerField(default=0)),
                ('away_hits', models.IntegerField(default=0)),
                ('home_errors', models.IntegerField(default=0)),
                ('away_errors', models.IntegerField(default=0)),
                ('home_left_on_base', models.IntegerField(default=0)),
                ('away_left_on_base', models.IntegerField(default=0)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='line_score', to='games.game')),
            ],
            options={
                'db_table': 'game_line_scores',
            },
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inning', models.IntegerField()),
                ('inning_half', models.CharField(max_length=10)),
                ('event_sequence', models.IntegerField()),
                ('event_type', models.CharField(max_length=50)),
                ('event_description', models.TextField(blank=True)),
                ('balls', models.IntegerField(default=0)),
                ('strikes', models.IntegerField(default=0)),
                ('outs', models.IntegerField(default=0)),
                ('runs_scored', models.IntegerField(default=0)),
                ('batter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batting_events', to='players.player')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='games.game')),
                ('pitcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitching_events', to='players.player')),
                ('runner_on_first', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='first_base_events', to='players.player')),
                ('runner_on_second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='second_base_events', to='players.player')),
                ('runner_on_third', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='third_base_events', to='players.player')),
            ],
            options={
                'db_table': 'game_events',
                'ordering': ['game', 'inning', 'event_sequence'],
            },
        ),
        migrations.CreateModel(
            name='GamePlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=3)),
                ('batting_order', models.IntegerField(blank=True, null=True)),
                ('at_bats', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('hits', models.IntegerField(default=0)),
                ('doubles', models.IntegerField(default=0)),
                ('triples', models.IntegerField(default=0)),
                ('home_runs', models.IntegerField(default=0)),
                ('runs_batted_in', models.IntegerField(default=0)),
                ('walks', models.IntegerField(default=0)),
                ('strikeouts', models.IntegerField(default=0)),
                ('stolen_bases', models.IntegerField(default=0)),
                ('caught_stealing', models.IntegerField(default=0)),
                ('putouts', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('errors', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
            options={
                'db_table': 'game_player_stats',
                'unique_together': {('game', 'player')},
            },
        ),
        migrations.CreateModel(
            name='GamePitcherStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('starter', 'Starting Pitcher'), ('reliever', 'Relief Pitcher'), ('closer', 'Closer')], max_length=20)),
                ('decision', models.CharField(blank=True, choices=[('W', 'Win'), ('L', 'Loss'), ('S', 'Save'), ('H', 'Hold'), ('BS', 'Blown Save'), ('', 'No Decision')], max_length=2)),
                ('innings_pitched', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('hits_allowed', models.IntegerField(default=0)),
                ('runs_allowed', models.IntegerField(default=0)),
                ('earned_runs', models.IntegerField(default=0)),
                ('walks_allowed', models.IntegerField(default=0)),
                ('strikeouts', models.IntegerField(default=0)),
                ('home_runs_allowed', models.IntegerField(default=0)),
                ('pitches_thrown', models.IntegerField(blank=True, null=True)),
                ('strikes_thrown', models.IntegerField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pitcher_stats', to='games.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
            options={
                'db_table': 'game_pitcher_stats',
                'unique_together': {('game', 'player')},
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['game_date'], name='games_game_da_1318cb_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['season'], name='games_season_e71dfe_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['home_team', 'game_date'], name='games_home_te_0d0c48_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['away_team', 'game_date'], name='games_away_te_245891_idx'),
        ),
    ]
